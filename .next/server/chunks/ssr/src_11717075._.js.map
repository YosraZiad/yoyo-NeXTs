{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/wamp64/www/yoyo-NeXTs/src/components/data-table.tsx"],"sourcesContent":["\"use client\"\n\n// src/components/data-table.tsx\nimport {\n  ColumnDef, // This is crucial for defining your columns with a generic type\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n  // ... other necessary imports for your table implementation\n} from \"@tanstack/react-table\"; // Adjust this import based on your actual library\n\n// Define the props interface to be generic over TData and TValue\ninterface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[]; // The columns should also be generic\n  data: TData[]; // Make data prop generic (TData[])\n}\n\n// Make the functional component itself generic\nexport function DataTable<TData, TValue>({\n  columns,\n  data,\n}: DataTableProps<TData, TValue>) {\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    // Add other necessary table options here (e.g., pagination, sorting)\n  });\n\n  return (\n    <div className=\"rounded-md border\">\n      <table className=\"min-w-full divide-y divide-gray-200\">\n        <thead className=\"bg-gray-50\">\n          {table.getHeaderGroups().map((headerGroup) => (\n            <tr key={headerGroup.id}>\n              {headerGroup.headers.map((header) => {\n                return (\n                  <th\n                    key={header.id}\n                    colSpan={header.colSpan}\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    {header.isPlaceholder\n                      ? null\n                      : flexRender(\n                          header.column.columnDef.header,\n                          header.getContext()\n                        )}\n                  </th>\n                );\n              })}\n            </tr>\n          ))}\n        </thead>\n        <tbody className=\"bg-white divide-y divide-gray-200\">\n          {table.getRowModel().rows.length ? (\n            table.getRowModel().rows.map((row) => (\n              <tr key={row.id}>\n                {row.getVisibleCells().map((cell) => (\n                  <td key={cell.id} className=\"px-6 py-4 whitespace-nowrap\">\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                  </td>\n                ))}\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={columns.length} className=\"px-6 py-4 text-center text-gray-500\">\n                لا يوجد بيانات.\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA,gCAAgC;AAChC,0TAMgC,kDAAkD;AANlF;AAHA;;;AAkBO,SAAS,UAAyB,EACvC,OAAO,EACP,IAAI,EAC0B;IAC9B,MAAM,QAAQ,CAAA,GAAA,sLAAA,CAAA,gBAAa,AAAD,EAAE;QAC1B;QACA;QACA,iBAAiB,CAAA,GAAA,qKAAA,CAAA,kBAAe,AAAD;IAEjC;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAM,WAAU;;8BACf,8OAAC;oBAAM,WAAU;8BACd,MAAM,eAAe,GAAG,GAAG,CAAC,CAAC,4BAC5B,8OAAC;sCACE,YAAY,OAAO,CAAC,GAAG,CAAC,CAAC;gCACxB,qBACE,8OAAC;oCAEC,SAAS,OAAO,OAAO;oCACvB,WAAU;8CAET,OAAO,aAAa,GACjB,OACA,CAAA,GAAA,sLAAA,CAAA,aAAU,AAAD,EACP,OAAO,MAAM,CAAC,SAAS,CAAC,MAAM,EAC9B,OAAO,UAAU;mCARlB,OAAO,EAAE;;;;;4BAYpB;2BAhBO,YAAY,EAAE;;;;;;;;;;8BAoB3B,8OAAC;oBAAM,WAAU;8BACd,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,GAC9B,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,oBAC5B,8OAAC;sCACE,IAAI,eAAe,GAAG,GAAG,CAAC,CAAC,qBAC1B,8OAAC;oCAAiB,WAAU;8CACzB,CAAA,GAAA,sLAAA,CAAA,aAAU,AAAD,EAAE,KAAK,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,UAAU;mCADhD,KAAK,EAAE;;;;;2BAFX,IAAI,EAAE;;;;kDASjB,8OAAC;kCACC,cAAA,8OAAC;4BAAG,SAAS,QAAQ,MAAM;4BAAE,WAAU;sCAAsC;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS3F","debugId":null}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///C:/wamp64/www/yoyo-NeXTs/src/lib/api.ts"],"sourcesContent":["// src/lib/api.ts\n// (هذا هو الكود الذي قدمته سابقًا، فقط للتأكيد على السياق)\n\nimport type { ApiResponse, CustomerListResponse } from \"@/types/customer.d.ts\"; // تأكد من استيراد الواجهة هنا\n\ninterface RequestConfig extends RequestInit {\n  params?: Record<string, string | number>;\n}\n\nclass ApiService {\n  private baseUrl: string;\n  private apiKey: string;\n\n  constructor() {\n    this.baseUrl = process.env.NEXT_PUBLIC_API_BASE_URL || \"\";\n    this.apiKey = process.env.NEXT_PUBLIC_API_KEY || \"\";\n  }\n\n  private buildUrl(\n    endpoint: string,\n    params?: Record<string, string | number>\n  ): string {\n    // تأكد من أن baseUrl ينتهي بـ / وأن endpoint لا يبدأ بـ /\n    let base = this.baseUrl;\n    if (!base.endsWith(\"/\")) {\n      base = `${base}/`;\n    }\n\n    let path = endpoint;\n    if (path.startsWith(\"/\")) {\n      path = path.substring(1);\n    }\n\n    // بناء URL كامل\n    const fullUrl = `${base}${path}`;\n\n    // إضافة معلمات الاستعلام إذا وجدت\n    if (!params || Object.keys(params).length === 0) {\n      return fullUrl;\n    }\n\n    // بناء سلسلة معلمات الاستعلام\n    const queryParams = new URLSearchParams();\n    Object.entries(params).forEach(([key, value]) => {\n      if (value !== undefined && value !== null) {\n        queryParams.append(key, String(value));\n      }\n    });\n\n    const queryString = queryParams.toString();\n    if (queryString) {\n      return `${fullUrl}?${queryString}`;\n    }\n\n    return fullUrl;\n  }\n\n  // استخدام ApiResponse<T> الذي قمت بتعريفه\n  private async request<T>(\n    endpoint: string,\n    config: RequestConfig = {}\n  ): Promise<ApiResponse<T>> {\n    // تم تحديث نوع الإرجاع هنا\n    const { params, ...requestConfig } = config;\n\n    const url = this.buildUrl(endpoint, params);\n\n    // طباعة معلومات تشخيصية\n    console.log(`🔍 API Request to: ${url}`);\n\n    // تحسين رؤوس الطلب لتتضمن المزيد من المعلومات للتوثيق\n    const defaultConfig: RequestInit = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${this.apiKey}`,\n        \"X-Api-Key\": this.apiKey,\n        \"X-Requested-With\": \"XMLHttpRequest\",\n        ...requestConfig.headers,\n      },\n      ...requestConfig,\n      // تعديل خيارات الطلب\n      credentials: \"same-origin\", // تغيير من include إلى same-origin لتجنب مشاكل CORS\n      mode: \"cors\", // يسمح بطلبات CORS\n      cache: \"no-cache\", // تجنب مشاكل التخزين المؤقت\n    };\n\n    try {\n      console.log(`📤 Request Headers:`, defaultConfig.headers);\n      console.log(`📤 Request Method:`, defaultConfig.method || \"GET\");\n\n      const response = await fetch(url, defaultConfig);\n      console.log(`📥 Response Status:`, response.status, response.statusText);\n\n      if (!response.ok) {\n        // محاولة تحليل رسالة الخطأ من الاستجابة\n        let errorMessage = `HTTP Error ${response.status}: ${response.statusText}`;\n        let errorData = {};\n\n        try {\n          // محاولة قراءة بيانات الخطأ كـ JSON\n          errorData = await response.json() as Record<string, any>;\n          console.error(`❌ API Error Response:`, errorData);\n          if (typeof errorData === 'object' && errorData !== null) {\n            // استخدام الوصول إلى الكائن بطريقة آمنة من نوع البيانات\n            const message = 'message' in errorData ? String(errorData.message) : undefined;\n            const error = 'error' in errorData ? String(errorData.error) : undefined;\n            errorMessage = message || error || errorMessage;\n          }\n        } catch (parseError) {\n          // إذا لم تكن الاستجابة بتنسيق JSON\n          console.error(`❌ Failed to parse error response:`, parseError);\n          try {\n            // محاولة قراءة الاستجابة كنص\n            const textResponse = await response.text();\n            console.error(`❌ Error Response Text:`, textResponse);\n          } catch (textError) {\n            console.error(\n              `❌ Failed to read error response as text:`,\n              textError\n            );\n          }\n        }\n\n        return {\n          success: false,\n          error: errorMessage,\n          statusCode: response.status,\n        } as ApiResponse<T>;\n      }\n\n      // محاولة تحليل الاستجابة الناجحة\n      try {\n        const data = await response.json();\n        console.log(`✅ API Response Success:`, {\n          dataPreview: data ? typeof data : \"null\",\n        });\n        return { success: true, data };\n      } catch (parseError) {\n        console.error(`❌ Failed to parse successful response:`, parseError);\n        return {\n          success: false,\n          error: \"Failed to parse API response\",\n          statusCode: 200,\n        } as ApiResponse<T>;\n      }\n    } catch (error) {\n      console.error(`❌ API Request Failed:`, error);\n      return {\n        success: false,\n        error:\n          error instanceof Error ? error.message : \"Network request failed\",\n        statusCode: 0, // عدم وجود رمز حالة يشير إلى فشل الشبكة\n      } as ApiResponse<T>;\n    }\n  }\n\n  // بيانات وهمية للعملاء لاستخدامها في حالة فشل الاتصال بـ API\n  private getMockCustomers(): CustomerListResponse {\n    return {\n      items: [\n        {\n          id: 1,\n          creationTime: new Date().toISOString(),\n          creatorId: \"1\",\n          lastModificationTime: new Date().toISOString(),\n          lastModifierId: \"1\",\n          isDeleted: false,\n          deleterId: \"\",\n          deletionTime: \"\",\n          fullName: \"محمد أحمد\",\n          companyName: \"شركة الأفق\",\n          mobileNumber: \"0501234567\",\n          masterMobileNumber: \"0501234567\"\n        },\n        {\n          id: 2,\n          creationTime: new Date().toISOString(),\n          creatorId: \"1\",\n          lastModificationTime: new Date().toISOString(),\n          lastModifierId: \"1\",\n          isDeleted: false,\n          deleterId: \"\",\n          deletionTime: \"\",\n          fullName: \"سارة محمد\",\n          companyName: \"شركة النور\",\n          mobileNumber: \"0507654321\",\n          masterMobileNumber: \"0507654321\"\n        },\n        {\n          id: 3,\n          creationTime: new Date().toISOString(),\n          creatorId: \"1\",\n          lastModificationTime: new Date().toISOString(),\n          lastModifierId: \"1\",\n          isDeleted: false,\n          deleterId: \"\",\n          deletionTime: \"\",\n          fullName: \"خالد عبدالله\",\n          companyName: \"شركة المستقبل\",\n          mobileNumber: \"0509876543\",\n          masterMobileNumber: \"0509876543\"\n        }\n      ],\n      totalCount: 3\n    };\n  }\n\n  // طرق العملاء\n  // هنا نحدد أن getCustomers ستعيد Promise<ApiResponse<CustomerListResponse>>\n  async getCustomers(params?: {\n    page?: number;\n    limit?: number;\n  }): Promise<ApiResponse<CustomerListResponse>> {\n    try {\n      // محاولة الاتصال بـ API الحقيقي\n      console.log(\"جاري محاولة الاتصال بـ API الحقيقي...\");\n      const response = await this.request(\"/customer\", { params });\n      \n      // إذا نجح الاتصال، أرجع البيانات الحقيقية\n      if (response.success && response.data) {\n        const data = response.data as unknown as CustomerListResponse;\n        if (data.items && data.items.length > 0) {\n          console.log(\"تم الحصول على بيانات العملاء من API\");\n          return { success: true, data: data } as ApiResponse<CustomerListResponse>;\n        }\n      }\n      \n      // إذا فشل الاتصال أو لم تكن هناك بيانات، استخدم البيانات الوهمية\n      console.log(\"استخدام البيانات الوهمية للعملاء\");\n      const mockData = this.getMockCustomers();\n      return { success: true, data: mockData };\n    } catch (error) {\n      console.error(\"خطأ في جلب بيانات العملاء:\", error);\n      \n      // في حالة الخطأ، استخدم البيانات الوهمية\n      console.log(\"استخدام البيانات الوهمية للعملاء بسبب خطأ\");\n      const mockData = this.getMockCustomers();\n      return { success: true, data: mockData };\n    }\n  }\n\n  // ... باقي الطرق (مثل getCustomer, createCustomer, إلخ) كما هي\n  async getCustomer(id: number) {\n    return this.request(`/customers/${id}`);\n  }\n\n  async createCustomer(customerData: any) {\n    return this.request(\"/customers\", {\n      method: \"POST\",\n      body: JSON.stringify(customerData),\n    });\n  }\n\n  async updateCustomer(id: number, customerData: any) {\n    return this.request(`/customer/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(customerData),\n    });\n  }\n\n  async getCustomerBalance(customerId: number) {\n    return this.request(\"/customer/customer-balance\", {\n      params: { customerId },\n    });\n  }\n\n  // طرق حسابات الجوال\n  async getMobileAccounts(params?: { customerId?: number }) {\n    return this.request(\"/mobile-account\", { params });\n  }\n\n  async createMobileAccount(accountData: any) {\n    return this.request(\"/mobile-account\", {\n      method: \"POST\",\n      body: JSON.stringify(accountData),\n    });\n  }\n\n  async updateMobileAccount(id: number, accountData: any) {\n    return this.request(`/mobile-account/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(accountData),\n    });\n  }\n\n  async deleteMobileAccount(id: number) {\n    return this.request(`/mobile-account/${id}`, {\n      method: \"DELETE\",\n    });\n  }\n\n  async restartSession(params: { mobileNumber: string; customerId: number }) {\n    return this.request(\"/mobile-account/restart-session\", {\n      params,\n    });\n  }\n\n  async deleteSession(params: { mobileNumber: string; customerId: number }) {\n    return this.request(\"/mobile-account/delete-session\", {\n      params,\n    });\n  }\n\n  // طرق الاشتراكات\n  async getSubscriptions(params?: { customerId?: number }) {\n    return this.request(\"/customer-subscription\", { params });\n  }\n\n  async createSubscription(subscriptionData: any) {\n    return this.request(\"/customer-subscription\", {\n      method: \"POST\",\n      body: JSON.stringify(subscriptionData),\n    });\n  }\n\n  async updateSubscription(id: number, subscriptionData: any) {\n    return this.request(`/customer-subscription/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(subscriptionData),\n    });\n  }\n\n  async deleteSubscription(id: number) {\n    return this.request(`/customer-subscription/${id}`, {\n      method: \"DELETE\",\n    });\n  }\n\n  async getCurrentPackage(customerId: number) {\n    return this.request(\"/customer-subscription/current-package\", {\n      params: { customerId },\n    });\n  }\n\n  async searchCustomers(query: string) {\n    return this.request(\"/customer-subscription/customer-lookup\", {\n      params: { query },\n    });\n  }\n\n  async searchPackages(query: string) {\n    return this.request(\"/customer-subscription/package-lookup\", {\n      params: { query },\n    });\n  }\n}\n\nexport const apiService = new ApiService();\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 428, "column": 0}, "map": {"version":3,"sources":["file:///C:/wamp64/www/yoyo-NeXTs/src/app/%5Blocale%5D/customers/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { DataTable } from \"@/components/data-table\";\n// import { SectionCards } from \"@/components/section-cards\";\nimport { useCustomers } from \"@/hooks/useApi\";\nimport type { Customer, CustomerListResponse } from \"@/types/customer.d.ts\"; // Already correctly using `import type`\nimport { apiService } from \"@/lib/api\";\nimport { useState, useEffect } from \"react\";\n\nimport { ColumnDef } from \"@tanstack/react-table\"; // Ensure this import is present\n\nexport default function Page() {\n  // استخدام useState و useEffect بدلاً من hook مخصص للمزيد من التحكم\n  const [customers, setCustomers] = useState<Customer[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [totalCount, setTotalCount] = useState<number>(0);\n\n  // استخدام useEffect لجلب البيانات عند تحميل الصفحة\n  useEffect(() => {\n    const fetchCustomers = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        // استدعاء API مباشرة\n        const response = await apiService.getCustomers();\n        \n        if (response.success && response.data) {\n          setCustomers(response.data.items || []);\n          setTotalCount(response.data.totalCount || 0);\n        } else {\n          setError(response.message || \"فشل في جلب بيانات العملاء\");\n          setCustomers([]);\n        }\n      } catch (err) {\n        console.error(\"خطأ في جلب بيانات العملاء:\", err);\n        setError(err instanceof Error ? err.message : \"حدث خطأ غير متوقع\");\n        setCustomers([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCustomers();\n  }, []);\n\n  // Define columns using ColumnDef<Customer> for type safety\n  const customerColumns: ColumnDef<Customer>[] = [\n    {\n      accessorKey: \"id\",\n      header: \"ID\",\n    },\n    {\n      accessorKey: \"fullName\",\n      header: \"الاسم الكامل\",\n    },\n    {\n      accessorKey: \"companyName\",\n      header: \"اسم الشركة\",\n    },\n    {\n      accessorKey: \"mobileNumber\",\n      header: \"رقم الجوال\",\n    },\n    {\n      accessorKey: \"masterMobileNumber\",\n      header: \"رقم الجوال الرئيسي\",\n    },\n    {\n      accessorKey: \"creationTime\",\n      header: \"تاريخ الإنشاء\",\n      cell: ({ row }) => {\n        return new Date(row.original.creationTime).toLocaleDateString();\n      },\n    },\n  ];\n\n  return (\n    <div className=\"flex flex-1 flex-col\">\n      <div className=\"@container/main flex flex-1 flex-col gap-2\">\n        <div className=\"flex flex-col gap-4 py-4 md:gap-6 md:py-6\">\n          {/* <SectionCards /> */}\n\n          <div className=\"px-4 lg:px-6\">\n            <div className=\"mb-4\">\n              <h1 className=\"text-2xl font-bold\">قائمة العملاء</h1>\n              {totalCount > 0 && <p className=\"text-gray-600\">إجمالي العملاء: {totalCount}</p>}\n            </div>\n            \n            {loading && (\n              <div className=\"flex justify-center items-center py-10\">\n                <div className=\"animate-spin rounded-full h-10 w-10 border-b-2 border-primary\"></div>\n                <span className=\"mr-3 text-gray-600\">جاري تحميل بيانات العملاء...</span>\n              </div>\n            )}\n            \n            {error && (\n              <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded relative mb-4\">\n                <strong className=\"font-bold\">خطأ! </strong>\n                <span className=\"block sm:inline\">{error}</span>\n                <button \n                  className=\"mt-2 bg-red-600 hover:bg-red-700 text-white py-1 px-3 rounded text-sm\"\n                  onClick={() => window.location.reload()}\n                >\n                  إعادة المحاولة\n                </button>\n              </div>\n            )}\n\n            {!loading && !error && customers.length > 0 && (\n              <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n                <DataTable columns={customerColumns} data={customers} />\n              </div>\n            )}\n\n            {!loading && !error && customers.length === 0 && (\n              <div className=\"text-center py-10 bg-gray-50 rounded-lg border border-gray-200\">\n                <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\" />\n                </svg>\n                <h3 className=\"mt-2 text-sm font-medium text-gray-900\">لا يوجد عملاء</h3>\n                <p className=\"mt-1 text-sm text-gray-500\">لم يتم العثور على أي عملاء في النظام.</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}